// <auto-generated />
using System;
using LI4.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LI4.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210528160252_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LI4.Shared.Entities.Aviso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<double>("Preço")
                        .HasColumnType("float");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<string>("metodo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Aviso");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Condicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designação")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Condicao");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Expansao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designação")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Expansao");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Linguagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designação")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Linguagem");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Localizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designação")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Localizacao");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CondicaoId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpansaoId")
                        .HasColumnType("int");

                    b.Property<int?>("LinguagemId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CondicaoId");

                    b.HasIndex("ExpansaoId");

                    b.HasIndex("LinguagemId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preço")
                        .HasColumnType("float");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int?>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocalizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalizacaoId");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Aviso", b =>
                {
                    b.HasOne("LI4.Shared.Entities.Cliente", "Cliente")
                        .WithMany("Avisos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("LI4.Shared.Entities.Produto", "Produto")
                        .WithMany("Avisos")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Produto", b =>
                {
                    b.HasOne("LI4.Shared.Entities.Condicao", "Condicao")
                        .WithMany("Produtos")
                        .HasForeignKey("CondicaoId");

                    b.HasOne("LI4.Shared.Entities.Expansao", "Expansao")
                        .WithMany("Produtos")
                        .HasForeignKey("ExpansaoId");

                    b.HasOne("LI4.Shared.Entities.Linguagem", "Linguagem")
                        .WithMany("Produtos")
                        .HasForeignKey("LinguagemId");

                    b.Navigation("Condicao");

                    b.Navigation("Expansao");

                    b.Navigation("Linguagem");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Venda", b =>
                {
                    b.HasOne("LI4.Shared.Entities.Produto", "Produto")
                        .WithMany("Vendas")
                        .HasForeignKey("ProdutoId");

                    b.HasOne("LI4.Shared.Entities.Vendedor", "Vendedor")
                        .WithMany("Vendas")
                        .HasForeignKey("VendedorId");

                    b.Navigation("Produto");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Vendedor", b =>
                {
                    b.HasOne("LI4.Shared.Entities.Localizacao", "Localizacao")
                        .WithMany("Vendedores")
                        .HasForeignKey("LocalizacaoId");

                    b.Navigation("Localizacao");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Cliente", b =>
                {
                    b.Navigation("Avisos");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Condicao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Expansao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Linguagem", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Localizacao", b =>
                {
                    b.Navigation("Vendedores");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Produto", b =>
                {
                    b.Navigation("Avisos");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("LI4.Shared.Entities.Vendedor", b =>
                {
                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
